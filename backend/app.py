import os
from datetime import datetime, timedelta
from flask import Flask, request, jsonify, send_file, url_for
from werkzeug.security import generate_password_hash, check_password_hash
from werkzeug.utils import secure_filename
from PIL import Image
import json
import uuid
import hashlib

# –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
from config import app, db, jwt, blacklisted_tokens

# –ò–º–ø–æ—Ä—Ç —É—Ç–∏–ª–∏—Ç
from utils import cleanup_expired_panoramas

# –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è –ø–∞–Ω–æ—Ä–∞–º
ALLOWED_EXTENSIONS = {'jpg', 'jpeg', 'png'}

def allowed_file(filename):
    return '.' in filename and filename.rsplit('.', 1)[1].lower() in ALLOWED_EXTENSIONS

# –û—Å–Ω–æ–≤–Ω–æ–π –º–∞—Ä—à—Ä—É—Ç
@app.route('/')
def index():
    from models import User, Panorama, Tour, UserSession
    from flask import request
    from datetime import datetime, timedelta
    
    stats = {
        'users': User.query.count(),
        'panoramas': Panorama.query.count(),
        'tours': Tour.query.count()
    }
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–µ—â–µ–Ω–∏–π –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    try:
        from flask_jwt_extended import verify_jwt_in_request, get_jwt_identity
        verify_jwt_in_request(optional=True)
        user_id = get_jwt_identity()
        if user_id:
            # –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            session = UserSession(
                user_id=int(user_id),
                token=f"home_{datetime.utcnow().timestamp()}",
                expires_at=datetime.utcnow() + timedelta(hours=1),
                ip_address=request.remote_addr,
                user_agent=request.headers.get('User-Agent')
            )
            
            db.session.add(session)
            db.session.commit()
    except:
        pass  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
    
    return jsonify({
        'message': 'Panorama 360 App API Server',
        'version': '1.0.0',
        'status': 'running',
        'stats': stats
    })

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è API
@app.route('/api/health')
def health_check():
    # –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–µ–∫—à–∏—Ö –ø–∞–Ω–æ—Ä–∞–º –ø—Ä–∏ –∫–∞–∂–¥–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ
    cleanup_expired_panoramas()
    
    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö —Å–µ—Å—Å–∏–π
    from utils import cleanup_old_sessions
    cleanup_old_sessions()
    
    from models import User, UserSession
    from flask import request
    from datetime import datetime, timedelta
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø–æ—Å–µ—â–µ–Ω–∏–π API
    try:
        from flask_jwt_extended import verify_jwt_in_request, get_jwt_identity
        verify_jwt_in_request(optional=True)
        user_id = get_jwt_identity()
        if user_id:
            # –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            session = UserSession(
                user_id=int(user_id),
                token=f"api_health_{datetime.utcnow().timestamp()}",
                expires_at=datetime.utcnow() + timedelta(hours=1),
                ip_address=request.remote_addr,
                user_agent=request.headers.get('User-Agent')
            )
            
            db.session.add(session)
            db.session.commit()
    except:
        pass  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
    
    return jsonify({
        'status': 'healthy',
        'timestamp': datetime.utcnow().isoformat(),
        'database': 'connected' if db.engine.dialect.name else 'disconnected',
        'upload_folder': app.config['UPLOAD_FOLDER']
    })

# –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–µ–π –∏ –º–∞—Ä—à—Ä—É—Ç–æ–≤ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
from models import User, Panorama, Tour, TourPanorama, Hotspot, UserSession
import auth  # –ò–º–ø–æ—Ä—Ç –º–∞—Ä—à—Ä—É—Ç–æ–≤ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
import user_management  # –ò–º–ø–æ—Ä—Ç –º–∞—Ä—à—Ä—É—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
import panorama_api  # –ò–º–ø–æ—Ä—Ç API –ø–∞–Ω–æ—Ä–∞–º
import tours_api  # –ò–º–ø–æ—Ä—Ç API —Ç—É—Ä–æ–≤
import admin_api  # –ò–º–ø–æ—Ä—Ç –∞–¥–º–∏–Ω API

if __name__ == '__main__':
    with app.app_context():
        db.create_all()
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        admin = User.query.filter_by(username='admin').first()
        if not admin:
            admin_password = generate_password_hash('209030Tes!')
            admin = User(
                username='admin',
                email='admin@panoramasite.com',
                password_hash=admin_password
            )
            admin.role = 'admin'
            admin.subscription_type = 'premium'
            db.session.add(admin)
            db.session.commit()
            print("üë§ –°–æ–∑–¥–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: admin / 209030Tes!")
        else:
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –µ—Å–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            admin.password_hash = generate_password_hash('209030Tes!')
            db.session.commit()
            print("üë§ –ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–±–Ω–æ–≤–ª–µ–Ω: admin / 209030Tes!")
    
    print("\nüöÄ Panorama 360 App API Server –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    print("üì± Frontend: http://localhost:3000")
    print("üîß API: http://localhost:5000")
    print("üìä Health check: http://localhost:5000/api/health")
    print("üë§ –ê–¥–º–∏–Ω: admin / 209030Tes!\n")
    
    app.run(debug=True, host='0.0.0.0', port=5000)