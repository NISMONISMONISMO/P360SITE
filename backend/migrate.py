#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª–µ–π width –∏ height –≤ —Ç–∞–±–ª–∏—Ü—É panoramas
"""

import os
import sys
import sqlite3
from PIL import Image

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ backend –≤ sys.path
backend_path = os.path.dirname(os.path.abspath(__file__))
sys.path.insert(0, backend_path)

def migrate_database():
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏—é –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db_paths = [
        os.path.join(backend_path, 'instance', 'panorama_site.db'),
        os.path.join(backend_path, 'panorama_site.db')
    ]
    
    db_path = None
    for path in db_paths:
        if os.path.exists(path):
            db_path = path
            break
    
    if not db_path:
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ó–∞–ø—É—Å—Ç–∏—Ç–µ app.py –¥–ª—è –µ—ë —Å–æ–∑–¥–∞–Ω–∏—è.")
        return False
    
    print(f"üìã –ù–∞–π–¥–µ–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: {db_path}")
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ª–∏ —É–∂–µ —Å—Ç–æ–ª–±—Ü—ã
        cursor.execute("PRAGMA table_info(panoramas)")
        columns = [row[1] for row in cursor.fetchall()]
        
        if 'width' in columns and 'height' in columns:
            print("‚úÖ –°—Ç–æ–ª–±—Ü—ã width –∏ height —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –≤ —Ç–∞–±–ª–∏—Ü–µ panoramas")
            conn.close()
            return True
        
        print("üîÑ –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±—Ü—ã width –∏ height...")
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ —Å—Ç–æ–ª–±—Ü—ã
        if 'width' not in columns:
            cursor.execute('ALTER TABLE panoramas ADD COLUMN width INTEGER')
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü width")
        
        if 'height' not in columns:
            cursor.execute('ALTER TABLE panoramas ADD COLUMN height INTEGER')
            print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —Å—Ç–æ–ª–±–µ—Ü height")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏, –ø–æ–ª—É—á–∞—è —Ä–∞–∑–º–µ—Ä—ã –∏–∑ —Ñ–∞–π–ª–æ–≤
        print("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–∞–Ω–æ—Ä–∞–º...")
        
        cursor.execute("SELECT id, file_path FROM panoramas WHERE width IS NULL OR height IS NULL")
        panoramas = cursor.fetchall()
        
        updated_count = 0
        for panorama_id, file_path in panoramas:
            if os.path.exists(file_path):
                try:
                    with Image.open(file_path) as img:
                        width, height = img.size
                        cursor.execute(
                            "UPDATE panoramas SET width = ?, height = ? WHERE id = ?",
                            (width, height, panorama_id)
                        )
                        updated_count += 1
                except Exception as e:
                    print(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è –ø–∞–Ω–æ—Ä–∞–º—ã {panorama_id}: {e}")
            else:
                print(f"‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–∞–Ω–æ—Ä–∞–º—ã {panorama_id}: {file_path}")
        
        conn.commit()
        conn.close()
        
        print(f"‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ! –û–±–Ω–æ–≤–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {updated_count}")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    success = migrate_database()
    
    if success:
        print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("–¢–µ–ø–µ—Ä—å –ø–∞–Ω–æ—Ä–∞–º—ã –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–æ–ø–æ—Ä—Ü–∏—è–º–∏.")
    else:
        print("\n‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–µ —É–¥–∞–ª–∞—Å—å.")
        sys.exit(1)